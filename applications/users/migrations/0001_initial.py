# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-28 19:55
from __future__ import unicode_literals

import uuid

import django.utils.timezone
from django.db import migrations, models

import applications.users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('i_by', models.IntegerField(blank=True, editable=False, null=True)),
                ('u_by', models.IntegerField(blank=True, editable=False, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('is_deleted', models.BooleanField(default=False, help_text='Instead of delete details from db, update this as False')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(blank=True, max_length=120, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=120, verbose_name='Last Name')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('device_type', models.CharField(blank=True, choices=[('A', 'Android'), ('I', 'Iphone')], max_length=1, null=True)),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'ordering': ('-date_joined',),
            },
            managers=[
                ('objects', applications.users.models.UserManager()),
            ],
        ),
    ]
